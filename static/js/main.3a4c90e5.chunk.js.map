{"version":3,"sources":["components/cell/Cell.js","components/board/Board.js","chooseWinner.js","components/gameLogic/GameLogicUseReducer.js","App.js","index.js","components/gameLogic/GameLogic.module.css","components/board/Board.module.css","components/cell/Cell.module.css"],"names":["Cell","onClick","value","disable","className","styles","cell","disabled","Board","cells","click","winner","wrapper","map","index","chooseWinner","lines","i","length","winnerIsX","winnerIs0","console","log","showDraw","indexOf","initialState","undefined","draw","step","board","Array","fill","reducer","state","action","type","boardArray","GameLogicUseReducer","useReducer","dispatch","handleClick","useCallback","resetGame","box","descr","text","btn","App","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.3a4c90e5.chunk.js","sourcesContent":["import styles from \"./Cell.module.css\";\r\n\r\nconst Cell = ({ onClick, value, disable }) => {\r\n  return (\r\n    <button className={styles.cell} onClick={onClick} disabled={disable}>\r\n      {value}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default Cell;\r\n","import styles from \"./Board.module.css\";\r\nimport Cell from \"../cell/Cell.js\";\r\n\r\nconst Board = ({ cells, click, winner }) => {\r\n  return (\r\n    <div className={styles.wrapper}>\r\n      {cells.map((cell, index) => {\r\n        return (\r\n          <Cell\r\n            key={index}\r\n            value={cell}\r\n            onClick={() => click(index)}\r\n            disable={cell || winner ? true : false}\r\n          />\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Board;\r\n","export const chooseWinner = (cells) => {\r\n  const lines = [\r\n    [0, 1, 2],\r\n    [3, 4, 5],\r\n    [6, 7, 8],\r\n    [0, 3, 6],\r\n    [1, 4, 7],\r\n    [2, 5, 8],\r\n    [0, 4, 8],\r\n    [2, 4, 6],\r\n  ];\r\n\r\n  for (let i = 0; i < lines.length; i++) {\r\n    let winnerIsX =\r\n      cells[lines[i][0]] === \"x\" &&\r\n      cells[lines[i][1]] === \"x\" &&\r\n      cells[lines[i][2]] === \"x\";\r\n\r\n    let winnerIs0 =\r\n      cells[lines[i][0]] === \"0\" &&\r\n      cells[lines[i][1]] === \"0\" &&\r\n      cells[lines[i][2]] === \"0\";\r\n\r\n    if (winnerIsX) {\r\n      console.log(\"X is winner\");\r\n      return \"X\";\r\n    } else if (winnerIs0) {\r\n      console.log(\"0 is winner\");\r\n      return \"0\";\r\n    }\r\n  }\r\n};\r\n\r\nexport const showDraw = (cells) => {\r\n  // console.log(cells);\r\n  if (cells.indexOf(\"\") === -1) {\r\n    console.log(\"draw!!!\");\r\n    return \"D\";\r\n  } else {\r\n    console.log(\"keep playing :)\");\r\n  }\r\n};\r\n","import React, { useCallback, useReducer } from \"react\";\r\nimport styles from \"./GameLogic.module.css\";\r\nimport Board from \"../board/Board\";\r\nimport { chooseWinner } from \"../../chooseWinner\";\r\nimport { showDraw } from \"../../chooseWinner\";\r\n\r\nconst initialState = {\r\n  winner: undefined,\r\n  draw: undefined,\r\n  step: 0,\r\n  board: Array(9).fill(\"\"),\r\n};\r\n\r\nfunction reducer(state, action) {\r\n  switch (action.type) {\r\n    case \"handleClick\":\r\n      const boardArray = [...state.board];\r\n\r\n      boardArray[action.index] = state.step % 2 === 0 ? \"x\" : \"0\";\r\n      // console.log(boardArray[action.index]);\r\n\r\n      return {\r\n        step: state.step + 1,\r\n        board: boardArray,\r\n        winner: chooseWinner(boardArray),\r\n        draw: showDraw(boardArray),\r\n      };\r\n\r\n    case \"reset\":\r\n      return initialState;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nconst GameLogicUseReducer = () => {\r\n  const [state, dispatch] = useReducer(reducer, initialState);\r\n\r\n  const handleClick = useCallback(\r\n    (i) => {\r\n      dispatch({ type: \"handleClick\", index: i });\r\n    },\r\n    [dispatch]\r\n  );\r\n\r\n  const resetGame = useCallback(() => {\r\n    dispatch({ type: \"reset\" });\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <>\r\n      {state.winner || state.draw ? (\r\n        <div className={styles.box}>\r\n          <p className={styles.descr}>\r\n            Winner is {state.winner} {state.draw} <br /> Let's play\r\n            <span className={styles.text}>NAUGHTS and CROSSES</span> again!\r\n          </p>\r\n          <button className={styles.btn} onClick={() => resetGame()}>\r\n            Click me\r\n          </button>\r\n        </div>\r\n      ) : null}\r\n      <Board cells={state.board} click={handleClick} winner={state.winner} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default GameLogicUseReducer;\r\n","// import GameLogicUseState from \"./components/gameLogic/GameLogicUseState\";\nimport GameLogicUseReducer from \"./components/gameLogic/GameLogicUseReducer\";\n\nfunction App() {\n  // return <GameLogicUseState />;\n  return <GameLogicUseReducer />;\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"box\":\"GameLogic_box__Ui8iQ\",\"descr\":\"GameLogic_descr__1ie9i\",\"text\":\"GameLogic_text__mm8RV\",\"btn\":\"GameLogic_btn__1scNQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Board_wrapper__25Vsg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cell\":\"Cell_cell__1SrpQ\"};"],"sourceRoot":""}